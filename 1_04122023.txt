# Git (Version Control)
	การกระจาย code เพื่อ clone ไปในแต่ละเครื่อง local และกลับไปรวม code ที่ server

- หลักการพื้นฐาน
	แก้ไข code ได้ทุกที่ ทุกเวลา จะเก็บอยู่ในเครื่อง local -> แก้ไข -> sync -> update server
- ทำไมต้องใช้
	ติดตาม version
	ป้องกัน version


# Github (Git Server)
- สร้าง repository (Web)
	https://github.com/new
- Public
- Private

# Git bash

$ git version
$ git config --global user.email "j.jayox_@hotmail.com"
$ git config --global user.name "jayrboy"
$ git config --list

- เครื่องส่วนตัวค้าง user ไว้ตลอด
- เครื่องอื่น ใช้เสร็จต้อง unset ด้วย

# Git Work Flow
- Directory (ยังไม่มีการติดตาม)					
- Directory (Tracked) มีการติดตาม				git init
- Staging Area				    git add
- Local Repository			    git commit
- Git Server			            git push 

#
$
$
$
$

# ลบไฟล์
$ git rm -r -cached .
$ git rm --cached index.html
$
$

# สร้างไฟล์
- vscode -> terminal -> git bash
$ touch app.js
$ touch index.html
$ git init
$ git status		# ยังไม่มีการติดตามจะเป็นตัว U = Untrack (No commit yet)

$ git add index.html				
$ git rm --cached index.html		

# Add ทุกไฟล์
$ git add .
	